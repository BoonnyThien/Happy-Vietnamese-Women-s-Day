import type { TresObject } from '@tresjs/core';
import { EffectComposer as EffectComposerImpl } from 'postprocessing';
import type { ShallowRef } from 'vue';
export interface EffectComposerProps {
    enabled?: boolean;
    children?: TresObject[];
    depthBuffer?: boolean;
    disableNormalPass?: boolean;
    stencilBuffer?: boolean;
    resolutionScale?: number;
    autoClear?: boolean;
    multisampling?: number;
    frameBufferType?: number;
}
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<EffectComposerProps>, {
    enabled: boolean;
    autoClear: boolean;
    frameBufferType: 1016;
    disableNormalPass: boolean;
    depthBuffer: undefined;
    multisampling: number;
    stencilBuffer: undefined;
}>, {
    composer: ShallowRef<EffectComposerImpl | null>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<EffectComposerProps>, {
    enabled: boolean;
    autoClear: boolean;
    frameBufferType: 1016;
    disableNormalPass: boolean;
    depthBuffer: undefined;
    multisampling: number;
    stencilBuffer: undefined;
}>>>, {
    enabled: boolean;
    depthBuffer: boolean;
    disableNormalPass: boolean;
    stencilBuffer: boolean;
    autoClear: boolean;
    multisampling: number;
    frameBufferType: number;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
